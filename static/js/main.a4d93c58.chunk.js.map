{"version":3,"sources":["api/pokeapi.js","store/actionCreators/pokemon.js","store/actions/pokemon.js","components/Modal.js","components/Loader/Loader.js","components/Card/PokemonAvatar.js","components/Card/PokemonType.js","components/Card/PokemonName.js","components/Card/CardPokemon.js","services/index.js","components/PokemonsList.js","components/ButtonsPage/TheButton.js","components/ButtonsPage/ButtonsPage.js","components/Search/Search.js","components/Categories/CategoriesListItem.js","components/Categories/CategoriesList.js","components/Categories/Categories.js","App.js","store/reducers/pokemonReducer.js","store/reducers/rootReducer.js","store/store.js","index.js"],"names":["pokeapi","axios","create","baseURL","fetchPokemons","url","dispatch","a","get","data","prev","previous","substring","indexOf","next","type","payload","results","selectPokemon","pokemon","document","getElementsByClassName","style","overflow","connect","state","pokemons","selectedPokemon","console","log","ReactDOM","createPortal","className","onClick","e","stopPropagation","alt","name","src","sprites","other","front_default","toUpperCase","height","weight","stats","map","stat","key","base_stat","querySelector","Loader","PokemonAvatar","PokemonType","types","renderType","slot","PokemonName","typeClass","useState","setPokemon","useEffect","cleanupFunction","message","fetchPokemon","getClassForType","mapDispatchToProps","children","onSubmit","preventDefault","trim","length","placeholder","onChange","target","value","fetchCategory","item","category","active","setActive","CategoriesList","categories","setCategories","fetchCategories","Categories","App","initialState","otherPokemons","pokemonReducer","action","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","render"],"mappings":"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","file":"static/js/main.a4d93c58.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const pokeapi = axios.create({\r\n  baseURL: 'https://pokeapi.co/api/v2/'\r\n})","import axios from 'axios';\r\nimport {pokeapi} from \"../../api/pokeapi\";\r\nimport { FETCH_POKEMONS, FETCH_POKEMON, SELECT_POKEMON, FETCH_CATEGORY } from \"../actions/pokemon\";\r\n\r\nexport const fetchPokemons = (url = '?limit=25&offset=0') => async dispatch => {\r\n  const { data } = await pokeapi.get(`/pokemon${url}`);\r\n  const prev = data.previous ? data.previous.substring(data.previous.indexOf('?offset')) : null;\r\n  const next = data.next ? data.next.substring(data.next.indexOf('?offset')) : null;\r\n\r\n  dispatch({\r\n    type: FETCH_POKEMONS,\r\n    payload: {\r\n      results: data.results,\r\n      prev,\r\n      next\r\n    }\r\n  })\r\n}\r\n\r\nexport const fetchPokemon = (name) => async dispatch => {\r\n  const { data } = await pokeapi.get(`/pokemon/${name}`);\r\n\r\n  dispatch({\r\n    type: FETCH_POKEMON,\r\n    payload: data\r\n  })\r\n}\r\n\r\nexport const selectPokemon = pokemon => {\r\n  if (pokemon) {\r\n    document.getElementsByClassName('page__body')[0].style.overflow = 'hidden';\r\n  } else {\r\n    document.getElementsByClassName('page__body')[0].style.overflow = '';\r\n  }\r\n\r\n  return {\r\n    type: SELECT_POKEMON,\r\n    payload: pokemon\r\n  }\r\n}\r\n\r\nexport const fetchCategory = (url) => async dispatch => {\r\n  const { data } = await axios.get(url);\r\n  const pokemons = data.pokemon.map(item => {\r\n    return item.pokemon;\r\n  });\r\n  console.log(pokemons);\r\n\r\n  dispatch({\r\n    type: FETCH_CATEGORY,\r\n    payload: {\r\n      results: pokemons,\r\n      prev: null,\r\n      next: null\r\n    }\r\n  })\r\n}","export const FETCH_POKEMONS = \"FETCH_POKEMONS\";\r\nexport const FETCH_POKEMON = \"FETCH_POKEMON\";\r\nexport const FETCH_CATEGORY = \"FETCH_CATEGORY\";\r\nexport const SELECT_POKEMON = \"SELECT_POKEMON\";","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { selectPokemon } from \"../store/actionCreators/pokemon\";\r\n\r\nimport \"../assets/stylesheets/Modal.css\";\r\n\r\nconst Modal = ({ pokemon, selectPokemon }) => {\r\n  console.log(pokemon);\r\n  const renderStats = () => {\r\n    return pokemon.stats.map((stat) => (\r\n      <li key={stat.stat.name} className=\"stat-list__item\">\r\n        <span>{stat.stat.name}</span>\r\n        <span>{stat.base_stat}</span>\r\n      </li>\r\n    ));\r\n  };\r\n\r\n  const renderModal = () => {\r\n    if (!pokemon) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"modal\" onClick={() => selectPokemon(null)}>\r\n        <div className=\"modal-body\" onClick={(e) => e.stopPropagation()}>\r\n          <img\r\n            alt={pokemon.name}\r\n            src={pokemon.sprites.other[\"official-artwork\"].front_default}\r\n            className=\"modal__img\"\r\n          />\r\n          <h2 className=\"modal__name\">{pokemon.name.toUpperCase()}</h2>\r\n          <ul className=\"stat-list\">\r\n            <li className=\"stat-list__item\">\r\n              <span>height</span>\r\n              <span>{pokemon.height}</span>\r\n            </li>\r\n            <li className=\"stat-list__item\">\r\n              <span>weight</span>\r\n              <span>{pokemon.weight}</span>\r\n            </li>\r\n            {renderStats()}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return ReactDOM.createPortal(renderModal(), document.querySelector(\"#modal\"));\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    pokemon: state.pokemons.selectedPokemon,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { selectPokemon })(Modal);\r\n","import React from \"react\";\r\n\r\nimport \"../../assets/stylesheets/Loader.css\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div className=\"lds-roller\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\n\r\nimport Loader from \"../Loader/Loader\";\r\n\r\nconst PokemonAvatar = ({ pokemon }) => {\r\n  if (!pokemon.sprites) {\r\n    return (\r\n      <figure className=\"card__figure\">\r\n        <Loader />\r\n      </figure>\r\n    );\r\n  }\r\n  return (\r\n    <figure className=\"card__figure\">\r\n      <img\r\n        alt={pokemon.name}\r\n        src={pokemon.sprites.other[\"official-artwork\"].front_default}\r\n        className=\"card__image\"\r\n      />\r\n      <div className=\"card__image-circle\"></div>\r\n    </figure>\r\n  );\r\n};\r\n\r\nexport default PokemonAvatar;\r\n","import React from \"react\";\r\n\r\nconst PokemonType = ({ types }) => {\r\n  if (!types) {\r\n    return null;\r\n  }\r\n\r\n  const renderType = types.map((type) => {\r\n    return <span key={type.slot}> {type.type.name}</span>;\r\n  });\r\n\r\n  return <h3 className=\"card__types\">Types:{renderType}</h3>;\r\n};\r\n\r\nexport default PokemonType;\r\n","import React from \"react\";\r\n\r\nconst PokemonName = ({ name }) => {\r\n  if (!name) {\r\n    return null;\r\n  }\r\n\r\n  return <h2 className=\"card__name\">{name.toUpperCase()}</h2>;\r\n};\r\n\r\nexport default PokemonName;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { pokeapi } from \"../../api/pokeapi\";\r\nimport \"../../assets/stylesheets/CardPokemon.css\";\r\nimport { getClassForType } from \"../../services\";\r\nimport PokemonAvatar from \"./PokemonAvatar\";\r\nimport PokemonType from \"./PokemonType\";\r\nimport PokemonName from \"./PokemonName\";\r\nimport { selectPokemon } from \"../../store/actionCreators/pokemon\";\r\n\r\nconst CardPokemon = ({ name, selectPokemon }) => {\r\n  const [pokemon, setPokemon] = useState({});\r\n  useEffect(() => {\r\n    let cleanupFunction = false;\r\n\r\n    const fetchPokemon = async () => {\r\n      try {\r\n        const { data } = await pokeapi.get(`/pokemon/${name}`);\r\n        if (!cleanupFunction) setPokemon(data);\r\n      } catch (e) {\r\n        console.log(e.message);\r\n      }\r\n    };\r\n\r\n    fetchPokemon();\r\n\r\n    return () => (cleanupFunction = true);\r\n  }, []);\r\n\r\n  let typeClass;\r\n\r\n  if (pokemon.types) {\r\n    typeClass = getClassForType(pokemon.types);\r\n  }\r\n\r\n  return (\r\n    <button\r\n      onClick={() => selectPokemon(pokemon)}\r\n      className={`card ${typeClass}`}\r\n    >\r\n      <PokemonAvatar pokemon={pokemon} />\r\n      <PokemonName name={pokemon.name} />\r\n      <PokemonType types={pokemon.types} />\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default connect(null, { selectPokemon })(CardPokemon);\r\n","export const getClassForType = (types) => {\r\n  let type;\r\n\r\n  if(types[0].type.name === 'normal' && types[1]) {\r\n    type = types[1].type.name;\r\n  } else {\r\n    type = types[0].type.name;\r\n  }\r\n\r\n\r\n  switch (type) {\r\n    case \"fire\":\r\n      return \"card--fire\";\r\n    case \"water\":\r\n      return \"card--water\";\r\n    case \"electric\":\r\n      return \"card--electric\";\r\n    case \"poison\":\r\n      return \"card--poison\";\r\n    case \"flying\":\r\n      return \"card--flying\";\r\n    case \"bug\":\r\n      return \"card--bug\";\r\n    case \"grass\":\r\n      return \"card--grass\";\r\n    case \"ground\":\r\n      return \"card--ground\";\r\n    case \"fighting\":\r\n      return \"card--fighting\";\r\n    case \"rock\":\r\n      return \"card--rock\";\r\n    case \"ghost\":\r\n      return \"card--ghost\";\r\n    case \"steel\":\r\n      return \"card--steel\";\r\n    case \"psychic\":\r\n      return \"card--psychic\";\r\n    case \"dragon\":\r\n      return \"card--dragon\";\r\n    case \"ice\":\r\n      return \"card--ice\";\r\n    case \"dark\":\r\n      return \"card--dark\";\r\n    case \"fairy\":\r\n      return \"card--fairy\";\r\n    case \"shadow\":\r\n      return \"card--shadow\";\r\n    default:\r\n      return \"card--normal\";\r\n  }\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchPokemons } from \"../store/actionCreators/pokemon\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport CardPokemon from \"./Card/CardPokemon\";\r\nimport \"../assets/stylesheets/PokemonsList.css\";\r\n\r\nconst PokemonList = ({ fetchPokemons, pokemons }) => {\r\n  useEffect(() => {\r\n    fetchPokemons();\r\n  }, []);\r\n\r\n  if (!pokemons) {\r\n    return null;\r\n  }\r\n  const pokemonList = () => {\r\n    if (!pokemons) {\r\n      return null;\r\n    }\r\n    return pokemons.map((pokemon) => {\r\n      return <CardPokemon name={pokemon.name} key={pokemon.name} />;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal></Modal>\r\n      <div className=\"pokemon__list\">{pokemonList()}</div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    pokemons: state.pokemons.pokemons,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchPokemons,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PokemonList);\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchPokemons } from \"../../store/actionCreators/pokemon\";\r\nimport \"../../assets/stylesheets/TheButton.css\";\r\n\r\nconst TheButton = ({ children, url, fetchPokemons, className }) => {\r\n  const getPokemons = () => {\r\n    fetchPokemons(url);\r\n  }\r\n\r\n  if(!url) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <button className={`button__page ${className}`} onClick={getPokemons}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchPokemons\r\n}\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(TheButton);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport TheButton from \"./TheButton\";\r\n\r\nconst ButtonsPage = ({ prev, next }) => {\r\n  return (\r\n    <div className=\"buttons__page\">\r\n      <TheButton url={prev} className=\"button__page-prev\">Назад</TheButton>\r\n      <TheButton url={next} className=\"button__page-next\">Далее</TheButton>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    prev: state.pokemons.prev,\r\n    next: state.pokemons.next,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ButtonsPage);\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"../../assets/stylesheets/Search.css\";\r\nimport {\r\n  fetchPokemon,\r\n  fetchPokemons,\r\n} from \"../../store/actionCreators/pokemon\";\r\n\r\nconst Search = ({ pokemons, fetchPokemon, fetchPokemons }) => {\r\n  const [pokemon, setPokemon] = useState(\"\");\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (pokemon.trim()) {\r\n      fetchPokemon(pokemon.trim());\r\n    } else if (!pokemons.length || pokemons.length === 1) {\r\n      fetchPokemons();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"search\" onSubmit={onSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Искать покемона\"\r\n        className=\"search__input\"\r\n        onChange={(e) => setPokemon(e.target.value)}\r\n        value={pokemon}\r\n      />\r\n      <button type=\"submit\" className=\"search__button\">\r\n        Искать\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    pokemons: state.pokemons.pokemons,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  fetchPokemon,\r\n  fetchPokemons,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { fetchPokemons, fetchCategory } from \"../../store/actionCreators/pokemon\";\r\n\r\nconst CategoriesListItem = ({ category, url, active, setActive, fetchPokemons, fetchCategory }) => {\r\n  const renderClassNameActive = () => {\r\n    return active === category ? \"categories-lsit__button-text--active\" : \"\";\r\n  };\r\n\r\n  const fetchCategoryPokemon = () => {\r\n    if (category !== active) {\r\n      setActive(category);\r\n\r\n      if(!url) {\r\n        fetchPokemons();\r\n      } else {\r\n        fetchCategory(url);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li className=\"categories-list__item\">\r\n      <button \r\n        onClick={fetchCategoryPokemon}\r\n        className=\"categories-list__button\">\r\n        <span\r\n          className={`categories-lsit__button-text ${renderClassNameActive()}`}>\r\n          {category}\r\n        </span>\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default connect(null, { fetchPokemons, fetchCategory })(CategoriesListItem);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { pokeapi } from \"../../api/pokeapi\";\r\nimport CategoriesListItem from \"./CategoriesListItem\";\r\n\r\nconst CategoriesList = () => {\r\n  const [categories, setCategories] = useState([]);\r\n  const [active, setActive] = useState(\"All\");\r\n\r\n  useEffect(() => {\r\n    const fetchCategories = async () => {\r\n      const { data } = await pokeapi.get(\"/type\");\r\n      setCategories(data.results);\r\n    };\r\n    fetchCategories();\r\n  }, []);\r\n\r\n  const renderListItem = () => {\r\n    if (!categories.length) {\r\n      return null;\r\n    }\r\n    return categories.map((category) => {\r\n      return (\r\n        <CategoriesListItem\r\n          active={active}\r\n          setActive={setActive}\r\n          category={category.name}\r\n          url={category.url}\r\n          key={category.name}\r\n        />\r\n      );\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ul className=\"categories-list\">\r\n      <CategoriesListItem\r\n        category=\"All\"\r\n        url=\"\"\r\n        active={active}\r\n        setActive={setActive}\r\n      />\r\n      {renderListItem()}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default CategoriesList;\r\n","import React from \"react\";\r\n\r\nimport \"../../assets/stylesheets/Categories.css\";\r\nimport CategoriesList from \"./CategoriesList\";\r\n\r\nconst Categories = () => {\r\n  return (\r\n    <div className=\"categories\">\r\n      <span className=\"categories__text\">\r\n        Категории:\r\n      </span>\r\n      <CategoriesList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React from \"react\";\r\n\r\nimport \"./assets/stylesheets/App.css\";\r\n\r\nimport PokemonsList from \"./components/PokemonsList\";\r\nimport ButtonsPage from \"./components/ButtonsPage/ButtonsPage\";\r\nimport Search from \"./components/Search/Search\";\r\nimport Categories from \"./components/Categories/Categories\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Search />\r\n      <Categories />\r\n      <ButtonsPage />\r\n      <PokemonsList />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { FETCH_POKEMONS, FETCH_POKEMON, SELECT_POKEMON, FETCH_CATEGORY } from \"../actions/pokemon\";\r\n\r\nconst initialState = {\r\n  pokemons: [],\r\n  otherPokemons: [],\r\n  next: null,\r\n  prev: null,\r\n  selectedPokemon: null\r\n}\r\n\r\nconst pokemonReducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case FETCH_POKEMONS:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload.results,\r\n        prev: action.payload.prev,\r\n        next: action.payload.next\r\n      }\r\n    case FETCH_POKEMON:\r\n      return {\r\n        ...state,\r\n        pokemons: [action.payload],\r\n        prev: null,\r\n        next: null\r\n      }\r\n    case SELECT_POKEMON:\r\n      return {...state, selectedPokemon: action.payload}\r\n    case FETCH_CATEGORY:\r\n      return {\r\n        ...state,\r\n        pokemons: action.payload.results,\r\n        prev: action.payload.prev,\r\n        next: action.payload.next\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default pokemonReducer;","import { combineReducers } from 'redux';\r\n\r\nimport pokemonReducer from \"./pokemonReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  pokemons: pokemonReducer\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\nconst store = createStore(rootReducer, compose(\r\n  applyMiddleware(thunk),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n));\r\n\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from \"./App\";\r\nimport store from \"./store/store\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}